import ts from "typescript"
import generateBooleanLiteralParser from "./generateBooleanLiteralParser"
import generateBooleanParser from "./generateBooleanParser"
import generateIntersectionParser from "./generateIntersectionParser"
import generateNullParser from "./generateNullParser"
import generateNumberLiteralParser from "./generateNumberLiteralParser"
import generateNumberParser from "./generateNumberParser"
import generateObjectParser from "./generateObjectParser"
import generateStringLiteralParser from "./generateStringLiteralParser"
import generateStringParser from "./generateStringParser"
import generateUndefinedParser from "./generateUndefinedParser"
import generateUnionParser from "./generateUnionParser"
import { Pointer } from "./Pointers"
import { TSNode } from "./TSNode"

type Parser = (node: Pointer) => ts.Statement

const parsers: Array<{
  flag: ts.SyntaxKind
  parser: Parser
}> = [
  // {
  //   flag: ts.SyntaxKind.NumericLiteral,
  //   parser: generateNumberLiteralParser,
  // },
  // {
  //   flag: ts.SyntaxKind.StringLiteral,
  //   parser: generateStringLiteralParser,
  // },
  // {
  //   flag: ts.SyntaxKind.TrueKeyword | ts.SyntaxKind.FalseKeyword,
  //   parser: generateBooleanLiteralParser,
  // },
  // { flag: ts.SyntaxKind.NumberKeyword, parser: generateNumberParser },
  // { flag: ts.SyntaxKind.StringKeyword, parser: generateStringParser },
  // { flag: ts.SyntaxKind.BooleanKeyword, parser: generateBooleanParser },
  // { flag: ts.SyntaxKind.LiteralType, parser: generateNullParser },
  // { flag: ts.SyntaxKind.UndefinedKeyword, parser: generateUndefinedParser },
  // { flag: ts.SyntaxKind.ObjectLiteralExpression, parser: generateObjectParser },
  // { flag: ts.SyntaxKind.InterfaceDeclaration, parser: generateObjectParser },
  // { flag: ts.SyntaxKind.IntersectionType, parser: generateIntersectionParser },
  // { flag: ts.SyntaxKind.UnionType, parser: generateUnionParser },
  // {
  //   flag: ts.SyntaxKind.NeverKeyword,
  //   parser: (node) => {
  //     throw new Error("never say never")
  //     // throw new Error("Never say never" + node.compilerNode)
  //   },
  // },
]

export function generateParserForNode(node: Pointer): ts.Statement {
  // console.log("XXXAAAA", node.type.flags)
  const parser = parsers.reduce((result, { flag, parser }) => {
    if (result) {
      return result
    }
    return (node.kind & flag) === flag ? parser : null
  }, null as Parser | null)

  if (!parser) {
    throw new Error(`No parser found for type with flag ${node.kind}`)
  }

  // console.log("TYPE YES", {
  //   typeFlags: xTypeFlags[node.type.flags],
  //   compilerNodeKind: xSyntaxKind[node.compilerNode.kind],
  //   typeNodeKind: xSyntaxKind[node.typeNode.kind ?? "0"],
  // })

  return parser(node)
}

const xSyntaxKind = {
  "0": "Unknown",
  "1": "EndOfFileToken",
  "2": "SingleLineCommentTrivia",
  "3": "MultiLineCommentTrivia",
  "4": "NewLineTrivia",
  "5": "WhitespaceTrivia",
  "6": "ShebangTrivia",
  "7": "ConflictMarkerTrivia",
  "8": "NumericLiteral",
  "9": "BigIntLiteral",
  "10": "StringLiteral",
  "11": "JsxText",
  "12": "JsxTextAllWhiteSpaces",
  "13": "RegularExpressionLiteral",
  "14": "NoSubstitutionTemplateLiteral",
  "15": "TemplateHead",
  "16": "TemplateMiddle",
  "17": "TemplateTail",
  "18": "OpenBraceToken",
  "19": "CloseBraceToken",
  "20": "OpenParenToken",
  "21": "CloseParenToken",
  "22": "OpenBracketToken",
  "23": "CloseBracketToken",
  "24": "DotToken",
  "25": "DotDotDotToken",
  "26": "SemicolonToken",
  "27": "CommaToken",
  "28": "QuestionDotToken",
  "29": "LessThanToken",
  "30": "LessThanSlashToken",
  "31": "GreaterThanToken",
  "32": "LessThanEqualsToken",
  "33": "GreaterThanEqualsToken",
  "34": "EqualsEqualsToken",
  "35": "ExclamationEqualsToken",
  "36": "EqualsEqualsEqualsToken",
  "37": "ExclamationEqualsEqualsToken",
  "38": "EqualsGreaterThanToken",
  "39": "PlusToken",
  "40": "MinusToken",
  "41": "AsteriskToken",
  "42": "AsteriskAsteriskToken",
  "43": "SlashToken",
  "44": "PercentToken",
  "45": "PlusPlusToken",
  "46": "MinusMinusToken",
  "47": "LessThanLessThanToken",
  "48": "GreaterThanGreaterThanToken",
  "49": "GreaterThanGreaterThanGreaterThanToken",
  "50": "AmpersandToken",
  "51": "BarToken",
  "52": "CaretToken",
  "53": "ExclamationToken",
  "54": "TildeToken",
  "55": "AmpersandAmpersandToken",
  "56": "BarBarToken",
  "57": "QuestionToken",
  "58": "ColonToken",
  "59": "AtToken",
  "60": "QuestionQuestionToken",
  /** Only the JSDoc scanner produces BacktickToken. The normal scanner produces NoSubstitutionTemplateLiteral and related kinds. */
  "61": "BacktickToken",
  /** Only the JSDoc scanner produces HashToken. The normal scanner produces PrivateIdentifier. */
  "62": "HashToken",
  "63": "EqualsToken",
  "64": "PlusEqualsToken",
  "65": "MinusEqualsToken",
  "66": "AsteriskEqualsToken",
  "67": "AsteriskAsteriskEqualsToken",
  "68": "SlashEqualsToken",
  "69": "PercentEqualsToken",
  "70": "LessThanLessThanEqualsToken",
  "71": "GreaterThanGreaterThanEqualsToken",
  "72": "GreaterThanGreaterThanGreaterThanEqualsToken",
  "73": "AmpersandEqualsToken",
  "74": "BarEqualsToken",
  "75": "BarBarEqualsToken",
  "76": "AmpersandAmpersandEqualsToken",
  "77": "QuestionQuestionEqualsToken",
  "78": "CaretEqualsToken",
  "79": "Identifier",
  "80": "PrivateIdentifier",
  "81": "BreakKeyword",
  "82": "CaseKeyword",
  "83": "CatchKeyword",
  "84": "ClassKeyword",
  "85": "ConstKeyword",
  "86": "ContinueKeyword",
  "87": "DebuggerKeyword",
  "88": "DefaultKeyword",
  "89": "DeleteKeyword",
  "90": "DoKeyword",
  "91": "ElseKeyword",
  "92": "EnumKeyword",
  "93": "ExportKeyword",
  "94": "ExtendsKeyword",
  "95": "FalseKeyword",
  "96": "FinallyKeyword",
  "97": "ForKeyword",
  "98": "FunctionKeyword",
  "99": "IfKeyword",
  "100": "ImportKeyword",
  "101": "InKeyword",
  "102": "InstanceOfKeyword",
  "103": "NewKeyword",
  "104": "NullKeyword",
  "105": "ReturnKeyword",
  "106": "SuperKeyword",
  "107": "SwitchKeyword",
  "108": "ThisKeyword",
  "109": "ThrowKeyword",
  "110": "TrueKeyword",
  "111": "TryKeyword",
  "112": "TypeOfKeyword",
  "113": "VarKeyword",
  "114": "VoidKeyword",
  "115": "WhileKeyword",
  "116": "WithKeyword",
  "117": "ImplementsKeyword",
  "118": "InterfaceKeyword",
  "119": "LetKeyword",
  "120": "PackageKeyword",
  "121": "PrivateKeyword",
  "122": "ProtectedKeyword",
  "123": "PublicKeyword",
  "124": "StaticKeyword",
  "125": "YieldKeyword",
  "126": "AbstractKeyword",
  "127": "AsKeyword",
  "128": "AssertsKeyword",
  "129": "AnyKeyword",
  "130": "AsyncKeyword",
  "131": "AwaitKeyword",
  "132": "BooleanKeyword",
  "133": "ConstructorKeyword",
  "134": "DeclareKeyword",
  "135": "GetKeyword",
  "136": "InferKeyword",
  "137": "IntrinsicKeyword",
  "138": "IsKeyword",
  "139": "KeyOfKeyword",
  "140": "ModuleKeyword",
  "141": "NamespaceKeyword",
  "142": "NeverKeyword",
  "143": "ReadonlyKeyword",
  "144": "RequireKeyword",
  "145": "NumberKeyword",
  "146": "ObjectKeyword",
  "147": "SetKeyword",
  "148": "StringKeyword",
  "149": "SymbolKeyword",
  "150": "TypeKeyword",
  "151": "UndefinedKeyword",
  "152": "UniqueKeyword",
  "153": "UnknownKeyword",
  "154": "FromKeyword",
  "155": "GlobalKeyword",
  "156": "BigIntKeyword",
  "157": "OverrideKeyword",
  "158": "OfKeyword",
  "159": "QualifiedName",
  "160": "ComputedPropertyName",
  "161": "TypeParameter",
  "162": "Parameter",
  "163": "Decorator",
  "164": "PropertySignature",
  "165": "PropertyDeclaration",
  "166": "MethodSignature",
  "167": "MethodDeclaration",
  "168": "ClassStaticBlockDeclaration",
  "169": "Constructor",
  "170": "GetAccessor",
  "171": "SetAccessor",
  "172": "CallSignature",
  "173": "ConstructSignature",
  "174": "IndexSignature",
  "175": "TypePredicate",
  "176": "TypeReference",
  "177": "FunctionType",
  "178": "ConstructorType",
  "179": "TypeQuery",
  "180": "TypeLiteral",
  "181": "ArrayType",
  "182": "TupleType",
  "183": "OptionalType",
  "184": "RestType",
  "185": "UnionType",
  "186": "IntersectionType",
  "187": "ConditionalType",
  "188": "InferType",
  "189": "ParenthesizedType",
  "190": "ThisType",
  "191": "TypeOperator",
  "192": "IndexedAccessType",
  "193": "MappedType",
  "194": "LiteralType",
  "195": "NamedTupleMember",
  "196": "TemplateLiteralType",
  "197": "TemplateLiteralTypeSpan",
  "198": "ImportType",
  "199": "ObjectBindingPattern",
  "200": "ArrayBindingPattern",
  "201": "BindingElement",
  "202": "ArrayLiteralExpression",
  "203": "ObjectLiteralExpression",
  "204": "PropertyAccessExpression",
  "205": "ElementAccessExpression",
  "206": "CallExpression",
  "207": "NewExpression",
  "208": "TaggedTemplateExpression",
  "209": "TypeAssertionExpression",
  "210": "ParenthesizedExpression",
  "211": "FunctionExpression",
  "212": "ArrowFunction",
  "213": "DeleteExpression",
  "214": "TypeOfExpression",
  "215": "VoidExpression",
  "216": "AwaitExpression",
  "217": "PrefixUnaryExpression",
  "218": "PostfixUnaryExpression",
  "219": "BinaryExpression",
  "220": "ConditionalExpression",
  "221": "TemplateExpression",
  "222": "YieldExpression",
  "223": "SpreadElement",
  "224": "ClassExpression",
  "225": "OmittedExpression",
  "226": "ExpressionWithTypeArguments",
  "227": "AsExpression",
  "228": "NonNullExpression",
  "229": "MetaProperty",
  "230": "SyntheticExpression",
  "231": "TemplateSpan",
  "232": "SemicolonClassElement",
  "233": "Block",
  "234": "EmptyStatement",
  "235": "VariableStatement",
  "236": "ExpressionStatement",
  "237": "IfStatement",
  "238": "DoStatement",
  "239": "WhileStatement",
  "240": "ForStatement",
  "241": "ForInStatement",
  "242": "ForOfStatement",
  "243": "ContinueStatement",
  "244": "BreakStatement",
  "245": "ReturnStatement",
  "246": "WithStatement",
  "247": "SwitchStatement",
  "248": "LabeledStatement",
  "249": "ThrowStatement",
  "250": "TryStatement",
  "251": "DebuggerStatement",
  "252": "VariableDeclaration",
  "253": "VariableDeclarationList",
  "254": "FunctionDeclaration",
  "255": "ClassDeclaration",
  "256": "InterfaceDeclaration",
  "257": "TypeAliasDeclaration",
  "258": "EnumDeclaration",
  "259": "ModuleDeclaration",
  "260": "ModuleBlock",
  "261": "CaseBlock",
  "262": "NamespaceExportDeclaration",
  "263": "ImportEqualsDeclaration",
  "264": "ImportDeclaration",
  "265": "ImportClause",
  "266": "NamespaceImport",
  "267": "NamedImports",
  "268": "ImportSpecifier",
  "269": "ExportAssignment",
  "270": "ExportDeclaration",
  "271": "NamedExports",
  "272": "NamespaceExport",
  "273": "ExportSpecifier",
  "274": "MissingDeclaration",
  "275": "ExternalModuleReference",
  "276": "JsxElement",
  "277": "JsxSelfClosingElement",
  "278": "JsxOpeningElement",
  "279": "JsxClosingElement",
  "280": "JsxFragment",
  "281": "JsxOpeningFragment",
  "282": "JsxClosingFragment",
  "283": "JsxAttribute",
  "284": "JsxAttributes",
  "285": "JsxSpreadAttribute",
  "286": "JsxExpression",
  "287": "CaseClause",
  "288": "DefaultClause",
  "289": "HeritageClause",
  "290": "CatchClause",
  "291": "PropertyAssignment",
  "292": "ShorthandPropertyAssignment",
  "293": "SpreadAssignment",
  "294": "EnumMember",
  "295": "UnparsedPrologue",
  "296": "UnparsedPrepend",
  "297": "UnparsedText",
  "298": "UnparsedInternalText",
  "299": "UnparsedSyntheticReference",
  "300": "SourceFile",
  "301": "Bundle",
  "302": "UnparsedSource",
  "303": "InputFiles",
  "304": "JSDocTypeExpression",
  "305": "JSDocNameReference",
  "306": "JSDocMemberName",
  "307": "JSDocAllType",
  "308": "JSDocUnknownType",
  "309": "JSDocNullableType",
  "310": "JSDocNonNullableType",
  "311": "JSDocOptionalType",
  "312": "JSDocFunctionType",
  "313": "JSDocVariadicType",
  "314": "JSDocNamepathType",
  "315": "JSDocComment",
  "316": "JSDocText",
  "317": "JSDocTypeLiteral",
  "318": "JSDocSignature",
  "319": "JSDocLink",
  "320": "JSDocLinkCode",
  "321": "JSDocLinkPlain",
  "322": "JSDocTag",
  "323": "JSDocAugmentsTag",
  "324": "JSDocImplementsTag",
  "325": "JSDocAuthorTag",
  "326": "JSDocDeprecatedTag",
  "327": "JSDocClassTag",
  "328": "JSDocPublicTag",
  "329": "JSDocPrivateTag",
  "330": "JSDocProtectedTag",
  "331": "JSDocReadonlyTag",
  "332": "JSDocOverrideTag",
  "333": "JSDocCallbackTag",
  "334": "JSDocEnumTag",
  "335": "JSDocParameterTag",
  "336": "JSDocReturnTag",
  "337": "JSDocThisTag",
  "338": "JSDocTypeTag",
  "339": "JSDocTemplateTag",
  "340": "JSDocTypedefTag",
  "341": "JSDocSeeTag",
  "342": "JSDocPropertyTag",
  "343": "SyntaxList",
  "344": "NotEmittedStatement",
  "345": "PartiallyEmittedExpression",
  "346": "CommaListExpression",
  "347": "MergeDeclarationMarker",
  "348": "EndOfDeclarationMarker",
  "349": "SyntheticReferenceExpression",
  "350": "Count",
}

const xTypeFlags = {
  "1": "Any",
  "2": "Unknown",
  "4": "String",
  "8": "Number",
  "16": "Boolean",
  "32": "Enum",
  "64": "BigInt",
  "128": "StringLiteral",
  "256": "NumberLiteral",
  "512": "BooleanLiteral",
  "1024": "EnumLiteral",
  "2048": "BigIntLiteral",
  "4096": "ESSymbol",
  "8192": "UniqueESSymbol",
  "16384": "Void",
  "32768": "Undefined",
  "65536": "Null",
  "131072": "Never",
  "262144": "TypeParameter",
  "524288": "Object",
  "1048576": "Union",
  "2097152": "Intersection",
  "4194304": "Index",
  "8388608": "IndexedAccess",
  "16777216": "Conditional",
  "33554432": "Substitution",
  "67108864": "NonPrimitive",
  "134217728": "TemplateLiteral",
  "268435456": "StringMapping",
  "2944": "Literal",
  "109440": "Unit",
  "384": "StringOrNumberLiteral",
  "117724": "PossiblyFalsy",
  "402653316": "StringLike",
  "296": "NumberLike",
  "2112": "BigIntLike",
  "528": "BooleanLike",
  "1056": "EnumLike",
  "12288": "ESSymbolLike",
  "49152": "VoidLike",
  "3145728": "UnionOrIntersection",
  "3670016": "StructuredType",
  "8650752": "TypeVariable",
  "58982400": "InstantiableNonPrimitive",
  "406847488": "InstantiablePrimitive",
  "465829888": "Instantiable",
  "469499904": "StructuredOrInstantiable",
  "536624127": "Narrowable",
}
